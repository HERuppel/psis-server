generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Clinic {
  id       String @id @db.Uuid
  password String @db.VarChar(255)
  email    String @unique @db.VarChar(100)
  name     String @db.VarChar(100)
  code     Int    @default(autoincrement())

  people Person[]

  @@map("clinic")
}

model Person {
  id            String   @id @db.Uuid
  email         String?  @unique @db.VarChar(100)
  name          String   @db.VarChar(100)
  class         String   @db.VarChar(32)
  CPF           String   @map("cpf") @db.VarChar(16)
  birthDate     DateTime @map("birth_date")
  contactNumber String?  @map("contact_number") @db.VarChar(32)

  clinicId String @map("clinic_id") @db.Uuid
  clinic   Clinic @relation(fields: [clinicId], references: [id])

  address Address?
  user    User?

  @@map("person")
}

model Address {
  id         String @id @db.Uuid
  city       String @db.VarChar(100)
  district   String @db.VarChar(100)
  publicArea String @map("public_area") @db.VarChar(255)

  personId String @unique @map("person_id") @db.Uuid
  person   Person @relation(fields: [personId], references: [id])

  @@map("address")
}

model User {
  userName      String  @map("user_name") @db.VarChar(100)
  active        Boolean @default(true)
  blocked       Boolean @default(false)
  loginAttempts Int     @default(0) @map("login_attempts")
  password      String  @db.VarChar(255)
  accessCode    Int     @map("access_code")

  id     String @id @unique @db.Uuid
  person Person @relation(fields: [id], references: [id])

  @@map("user")
}
